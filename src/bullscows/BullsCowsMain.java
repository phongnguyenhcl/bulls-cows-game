package bullscows;import java.util.ArrayList;import java.util.Arrays;import java.util.Collections;import java.util.List;import java.util.Scanner;public class BullsCowsMain {	static String secretCode;	public BullsCowsMain(int numberOfDigit) {		secretCode = generateSecretCode(numberOfDigit);	}	public static boolean grader(String guess) {		// check if guess matches secretCode		String result = "";		int codeLength = secretCode.length();		if (guess.equals(secretCode)) {			result = "Grade: " + codeLength + (codeLength > 1 ? " bulls" : " bull");			System.out.println(result);			System.out.println("Congratulations! You guessed the secret code.");			return true;		}		int bull = 0;		int cow = 0;		// find the occurrences of bulls and cows		for (int i = 0; i < secretCode.length(); i++) {			/*			 * if exists, pos will not be -1 if pos equals to i means it's a bull if not,			 * then it's a cow.			 */			int pos = secretCode.indexOf(guess.charAt(i));			if (pos != -1) {				if (pos == i) {					bull++;				} else {					cow++;				}			}		}		// structures result to be printed		String bullNumber = (bull > 1 ? " bulls" : " bull");		String cowNumber = (cow > 1 ? " cows" : " cow");		if (bull > 0 && cow > 0) {			result += (bull + bullNumber + " and " + cow + cowNumber);		} else if (bull > 0 && cow == 0) {			result += bull + bullNumber;		} else if (bull == 0 && cow > 0) {			result += cow + cowNumber;		} else {			result += " None";		}				System.out.printf("Grade: %s\n", result);				return false;	}	public static String generateSecretCode(int numberOfDigit) {		List<Integer> uniqueDigits = new ArrayList<Integer>(Arrays.asList(0, 1, 2, 3, 4, 5, 6, 7, 8, 9));		do {			Collections.shuffle(uniqueDigits);		} while (uniqueDigits.get(0) == 0);		StringBuilder code = new StringBuilder();		for (int digit : uniqueDigits) {			code.append(digit);		}		return code.substring(0, numberOfDigit).toString();	}	public static void main(String[] args) {		Scanner scanner = new Scanner(System.in);		System.out.println("Please, enter the secret code's length:");		int numberOfDigit = scanner.nextInt();		if (numberOfDigit > 10) {			System.out.printf(					"Error: can't generate a secret number with a length of %d because there aren't enough unique digits.\n", numberOfDigit);			scanner.close();			return;		}				BullsCowsMain bcGame = new BullsCowsMain(numberOfDigit);				scanner.nextLine();		int turn = 1;		System.out.println("Okay, let's start a game!");		System.out.println("Turn 1:");		while(!grader(scanner.nextLine())) {			turn++;			System.out.printf("Turn %d:%n", turn);		}		scanner.close();	}}